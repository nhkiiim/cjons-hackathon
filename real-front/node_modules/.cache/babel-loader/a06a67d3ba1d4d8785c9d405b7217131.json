{"ast":null,"code":"var _jsxFileName = \"/Users/kimnahyeon/git/CJONS-Hackathon/real-front/src/examples/Cards/InfoCards/FilledInfoCard/index.js\";\n\n/*\n=========================================================\n* Material Kit 2 React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-kit-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // react-router-dom components\n\nimport { Link } from \"react-router-dom\"; // @mui material components\n\nimport Icon from \"@mui/material/Icon\";\nimport MuiLink from \"@mui/material/Link\"; // Material Kit 2 React components\n\nimport MKBox from \"components/MKBox\";\nimport MKTypography from \"components/MKTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FilledInfoCard(_ref) {\n  let {\n    variant,\n    color,\n    icon,\n    title,\n    description,\n    action\n  } = _ref;\n  const buttonStyles = {\n    width: \"max-content\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& .material-icons-round\": {\n      fontSize: \"1.125rem\",\n      transform: `translateX(3px)`,\n      transition: \"transform 0.2s cubic-bezier(0.34, 1.61, 0.7, 1.3)\"\n    },\n    \"&:hover .material-icons-round, &:focus .material-icons-round\": {\n      transform: `translateX(6px)`\n    }\n  };\n  let iconColor = color;\n\n  if (variant === \"gradient\" && color !== \"light\") {\n    iconColor = \"white\";\n  } else if (variant === \"gradient\" && color === \"light\") {\n    iconColor = \"dark\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(MKBox, {\n    display: {\n      xs: \"block\",\n      md: \"flex\"\n    },\n    variant: variant,\n    bgColor: variant === \"contained\" ? \"grey-100\" : color,\n    borderRadius: \"xl\",\n    pt: 3.5,\n    pb: 3,\n    px: 3,\n    children: [/*#__PURE__*/_jsxDEV(MKTypography, {\n      display: \"block\",\n      variant: \"h3\",\n      color: iconColor,\n      textGradient: variant === \"contained\",\n      mt: -0.625,\n      children: typeof icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }, this) : icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MKBox, {\n      pt: {\n        xs: 3,\n        md: 0\n      },\n      pl: {\n        xs: 0,\n        md: 2\n      },\n      lineHeight: 1,\n      children: [/*#__PURE__*/_jsxDEV(MKTypography, {\n        display: \"block\",\n        variant: \"5\",\n        color: variant === \"contained\" || color === \"light\" ? \"dark\" : \"white\",\n        fontWeight: \"bold\",\n        mb: 1,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MKTypography, {\n        display: \"block\",\n        variant: \"body2\",\n        color: variant === \"contained\" || color === \"light\" ? \"text\" : \"white\",\n        mb: 2,\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), action && action.type === \"external\" ? /*#__PURE__*/_jsxDEV(MKTypography, {\n        component: MuiLink,\n        href: action.route,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        variant: \"body2\",\n        fontWeight: \"regular\",\n        color: variant === \"contained\" ? color : \"white\",\n        sx: buttonStyles,\n        children: [action.label, \" \", /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            fontWeight: \"bold\"\n          },\n          children: \"arrow_forward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : null, action && action.type === \"internal\" ? /*#__PURE__*/_jsxDEV(MKTypography, {\n        component: Link,\n        to: action.route,\n        variant: \"body2\",\n        fontWeight: \"regular\",\n        color: variant === \"contained\" ? color : \"white\",\n        sx: buttonStyles,\n        children: [action.label, \" \", /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            fontWeight: \"bold\"\n          },\n          children: \"arrow_forward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n} // Setting default props for the FilledInfoCard\n\n\n_c = FilledInfoCard;\nFilledInfoCard.defaultProps = {\n  variant: \"contained\",\n  color: \"info\",\n  action: false\n}; // Typechecking props for the FilledInfoCard\n\nFilledInfoCard.propTypes = {\n  variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  action: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n    route: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  })])\n};\nexport default FilledInfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilledInfoCard\");","map":{"version":3,"sources":["/Users/kimnahyeon/git/CJONS-Hackathon/real-front/src/examples/Cards/InfoCards/FilledInfoCard/index.js"],"names":["PropTypes","Link","Icon","MuiLink","MKBox","MKTypography","FilledInfoCard","variant","color","icon","title","description","action","buttonStyles","width","display","alignItems","fontSize","transform","transition","iconColor","xs","md","type","route","label","fontWeight","defaultProps","propTypes","oneOf","node","isRequired","string","oneOfType","bool","shape"],"mappings":"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","sourcesContent":["/*\n=========================================================\n* Material Kit 2 React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-kit-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\nimport MuiLink from \"@mui/material/Link\";\n\n// Material Kit 2 React components\nimport MKBox from \"components/MKBox\";\nimport MKTypography from \"components/MKTypography\";\n\nfunction FilledInfoCard({ variant, color, icon, title, description, action }) {\n  const buttonStyles = {\n    width: \"max-content\",\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"& .material-icons-round\": {\n      fontSize: \"1.125rem\",\n      transform: `translateX(3px)`,\n      transition: \"transform 0.2s cubic-bezier(0.34, 1.61, 0.7, 1.3)\",\n    },\n\n    \"&:hover .material-icons-round, &:focus .material-icons-round\": {\n      transform: `translateX(6px)`,\n    },\n  };\n\n  let iconColor = color;\n\n  if (variant === \"gradient\" && color !== \"light\") {\n    iconColor = \"white\";\n  } else if (variant === \"gradient\" && color === \"light\") {\n    iconColor = \"dark\";\n  }\n\n  return (\n    <MKBox\n      display={{ xs: \"block\", md: \"flex\" }}\n      variant={variant}\n      bgColor={variant === \"contained\" ? \"grey-100\" : color}\n      borderRadius=\"xl\"\n      pt={3.5}\n      pb={3}\n      px={3}\n    >\n      <MKTypography\n        display=\"block\"\n        variant=\"h3\"\n        color={iconColor}\n        textGradient={variant === \"contained\"}\n        mt={-0.625}\n      >\n        {typeof icon === \"string\" ? <Icon>{icon}</Icon> : icon}\n      </MKTypography>\n      <MKBox pt={{ xs: 3, md: 0 }} pl={{ xs: 0, md: 2 }} lineHeight={1}>\n        <MKTypography\n          display=\"block\"\n          variant=\"5\"\n          color={variant === \"contained\" || color === \"light\" ? \"dark\" : \"white\"}\n          fontWeight=\"bold\"\n          mb={1}\n        >\n          {title}\n        </MKTypography>\n        <MKTypography\n          display=\"block\"\n          variant=\"body2\"\n          color={variant === \"contained\" || color === \"light\" ? \"text\" : \"white\"}\n          mb={2}\n        >\n          {description}\n        </MKTypography>\n        {action && action.type === \"external\" ? (\n          <MKTypography\n            component={MuiLink}\n            href={action.route}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            variant=\"body2\"\n            fontWeight=\"regular\"\n            color={variant === \"contained\" ? color : \"white\"}\n            sx={buttonStyles}\n          >\n            {action.label} <Icon sx={{ fontWeight: \"bold\" }}>arrow_forward</Icon>\n          </MKTypography>\n        ) : null}\n        {action && action.type === \"internal\" ? (\n          <MKTypography\n            component={Link}\n            to={action.route}\n            variant=\"body2\"\n            fontWeight=\"regular\"\n            color={variant === \"contained\" ? color : \"white\"}\n            sx={buttonStyles}\n          >\n            {action.label} <Icon sx={{ fontWeight: \"bold\" }}>arrow_forward</Icon>\n          </MKTypography>\n        ) : null}\n      </MKBox>\n    </MKBox>\n  );\n}\n\n// Setting default props for the FilledInfoCard\nFilledInfoCard.defaultProps = {\n  variant: \"contained\",\n  color: \"info\",\n  action: false,\n};\n\n// Typechecking props for the FilledInfoCard\nFilledInfoCard.propTypes = {\n  variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  action: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n      route: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    }),\n  ]),\n};\n\nexport default FilledInfoCard;\n"]},"metadata":{},"sourceType":"module"}